<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on darwin)" generated="20230412 13:43:11.435" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="/Users/rialdyperdana/Documents/Iseng/AutomationPribadi/weather-api-robot-framework/Tests">
<suite id="s1-s1" name="TC01-GET-RealTimeWeather" source="/Users/rialdyperdana/Documents/Iseng/AutomationPribadi/weather-api-robot-framework/Tests/TC01-GET-RealTimeWeather.robot">
<test id="s1-s1-t1" name="User Get Respond with Valid Data" line="9">
<kw name="User Get The Data" library="RealTimeWeather">
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>X-RapidAPI-Key=${X_RapidAPI_Key}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230412 13:43:11.583" level="INFO">${header} = {'X-RapidAPI-Key': '5609de86f7mshff37ac23dfeca81p1d8122jsn05613f1f337a'}</msg>
<status status="PASS" starttime="20230412 13:43:11.583" endtime="20230412 13:43:11.583"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>q=${long_lat}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230412 13:43:11.583" level="INFO">${params} = {'q': '-7.7588325,110.4303985'}</msg>
<status status="PASS" starttime="20230412 13:43:11.583" endtime="20230412 13:43:11.583"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>real_time_weather</arg>
<arg>${baseURL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230412 13:43:11.583" level="INFO">Creating Session using : alias=real_time_weather, url=https://weatherapi-com.p.rapidapi.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230412 13:43:11.583" endtime="20230412 13:43:11.583"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${real_time_weather_request}</var>
<arg>real_time_weather</arg>
<arg>/current.json</arg>
<arg>params=${params}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230412 13:43:11.744" level="INFO">GET Request : url=https://weatherapi-com.p.rapidapi.com/current.json?q=-7.7588325%2C110.4303985 
 path_url=/current.json?q=-7.7588325%2C110.4303985 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate, br', 'Accept': '*/*', 'Connection': 'keep-alive', 'X-RapidAPI-Key': '5609de86f7mshff37ac23dfeca81p1d8122jsn05613f1f337a'} 
 body=None 
 </msg>
<msg timestamp="20230412 13:43:11.745" level="INFO">GET Response : url=https://weatherapi-com.p.rapidapi.com/current.json?q=-7.7588325%2C110.4303985 
 status=200, reason=OK 
 headers={'Date': 'Wed, 12 Apr 2023 06:43:11 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Cache-Control': 'public, max-age=180', 'Content-Encoding': 'br', 'Vary': 'Accept-Encoding', 'CDN-EdgeStorageId': '783', 'CDN-ProxyVer': '1.03', 'CDN-RequestCountryCode': 'SG', 'CDN-RequestPullCode': '200', 'CDN-PullZone': '93447', 'CDN-CachedAt': '04/12/2023 06:43:00', 'CDN-Uid': '8fa3a04a-75d9-4707-8056-b7b33c8ac7fe', 'CDN-Cache': 'HIT', 'CDN-RequestPullSuccess': 'True', 'CDN-RequestId': 'f74e835fbe113fede740a55e8f199307', 'CDN-Status': '200', 'X-RateLimit-Requests-Limit': '1000000', 'X-RateLimit-Requests-Remaining': '999994', 'X-RateLimit-Requests-Reset': '2509027', 'Server': 'RapidAPI-1.2.8', 'X-RapidAPI-Version': '1.2.8', 'X-RapidAPI-Region': 'AWS - ap-southeast-1'} 
 body={"location":{"name":"Depok","region":"Daerah Istimewa Yogyakarta","country":"Indonesia","lat":-7.76,"lon":110.43,"tz_id":"Asia/Jakarta","localtime_epoch":1681281780,"localtime":"2023-04-12 13:43"},"current":{"last_updated_epoch":1681281000,"last_updated":"2023-04-12 13:30","temp_c":31.1,"temp_f":88.0,"is_day":1,"condition":{"text":"Patchy rain possible","icon":"//cdn.weatherapi.com/weather/64x64/day/176.png","code":1063},"wind_mph":8.5,"wind_kph":13.7,"wind_degree":225,"wind_dir":"SW","pressure_mb":1008.0,"pressure_in":29.77,"precip_mm":0.1,"precip_in":0.0,"humidity":62,"cloud":93,"feelslike_c":35.7,"feelslike_f":96.3,"vis_km":10.0,"vis_miles":6.0,"uv":7.0,"gust_mph":10.3,"gust_kph":16.6}} 
 </msg>
<msg timestamp="20230412 13:43:11.745" level="INFO">/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/urllib3/connectionpool.py:1043: InsecureRequestWarning: Unverified HTTPS request is being made to host 'weatherapi-com.p.rapidapi.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20230412 13:43:11.745" level="INFO">${real_time_weather_request} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230412 13:43:11.583" endtime="20230412 13:43:11.745"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${real_time_weather_respond}</var>
<arg>${real_time_weather_request.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230412 13:43:11.746" level="INFO">${real_time_weather_respond} = {'location': {'name': 'Depok', 'region': 'Daerah Istimewa Yogyakarta', 'country': 'Indonesia', 'lat': -7.76, 'lon': 110.43, 'tz_id': 'Asia/Jakarta', 'localtime_epoch': 1681281780, 'localtime': '2023-0...</msg>
<status status="PASS" starttime="20230412 13:43:11.745" endtime="20230412 13:43:11.746"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${real_time_weather_request_status_code}</var>
<arg>${real_time_weather_request.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230412 13:43:11.747" level="INFO">${real_time_weather_request_status_code} = 200</msg>
<status status="PASS" starttime="20230412 13:43:11.746" endtime="20230412 13:43:11.747"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${real_time_weather_respond}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230412 13:43:11.748" level="INFO">${real_time_weather_respond} = {'location': {'name': 'Depok', 'region': 'Daerah Istimewa Yogyakarta', 'country': 'Indonesia', 'lat': -7.76, 'lon': 110.43, 'tz_id': 'Asia/Jakarta', 'localtime_epoch': 1681281780, 'localtime': '2023-0...</msg>
<status status="PASS" starttime="20230412 13:43:11.747" endtime="20230412 13:43:11.748"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${real_time_weather_request_status_code}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230412 13:43:11.748" level="INFO">${real_time_weather_request_status_code} = 200</msg>
<status status="PASS" starttime="20230412 13:43:11.748" endtime="20230412 13:43:11.748"/>
</kw>
<status status="PASS" starttime="20230412 13:43:11.583" endtime="20230412 13:43:11.748"/>
</kw>
<kw name="User Validate Status Code" library="RealTimeWeather">
<arg>200</arg>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${real_time_weather_request_status_code}</arg>
<arg>${expectedCodeStatus}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230412 13:43:11.749" endtime="20230412 13:43:11.749"/>
</kw>
<status status="PASS" starttime="20230412 13:43:11.749" endtime="20230412 13:43:11.749"/>
</kw>
<kw name="User Validate the Respond Body" library="RealTimeWeather">
<if>
<branch type="IF" condition="${real_time_weather_request_status_code} == 200">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${location_name}</var>
<arg>${real_time_weather_respond}</arg>
<arg>$.location.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20230412 13:43:11.777" level="INFO">${location_name} = ['Depok']</msg>
<status status="PASS" starttime="20230412 13:43:11.750" endtime="20230412 13:43:11.777"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${location_name}</var>
<arg>${location_name}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230412 13:43:11.780" level="INFO">${location_name} = Depok</msg>
<status status="PASS" starttime="20230412 13:43:11.778" endtime="20230412 13:43:11.780"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${location_name}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230412 13:43:11.780" level="INFO">Length is 5</msg>
<status status="PASS" starttime="20230412 13:43:11.780" endtime="20230412 13:43:11.780"/>
</kw>
<status status="PASS" starttime="20230412 13:43:11.750" endtime="20230412 13:43:11.780"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Error Message is appear on the respond body</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230412 13:43:11.780" endtime="20230412 13:43:11.780"/>
</kw>
<status status="NOT RUN" starttime="20230412 13:43:11.780" endtime="20230412 13:43:11.780"/>
</branch>
<status status="PASS" starttime="20230412 13:43:11.750" endtime="20230412 13:43:11.781"/>
</if>
<status status="PASS" starttime="20230412 13:43:11.750" endtime="20230412 13:43:11.781"/>
</kw>
<status status="PASS" starttime="20230412 13:43:11.582" endtime="20230412 13:43:11.781"/>
</test>
<status status="PASS" starttime="20230412 13:43:11.444" endtime="20230412 13:43:11.781"/>
</suite>
<suite id="s1-s2" name="TC02-GET-ForecastWeather" source="/Users/rialdyperdana/Documents/Iseng/AutomationPribadi/weather-api-robot-framework/Tests/TC02-GET-ForecastWeather.robot">
<test id="s1-s2-t1" name="User Get Respond with Valid Data" line="9">
<kw name="User Get The Data" library="ForecastWeather">
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>X-RapidAPI-Key=${X_RapidAPI_Key}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230412 13:43:11.788" level="INFO">${header} = {'X-RapidAPI-Key': '5609de86f7mshff37ac23dfeca81p1d8122jsn05613f1f337a'}</msg>
<status status="PASS" starttime="20230412 13:43:11.788" endtime="20230412 13:43:11.788"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${params}</var>
<arg>q=${country}</arg>
<arg>days=${days}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230412 13:43:11.788" level="INFO">${params} = {'q': 'Jakarta', 'days': '2'}</msg>
<status status="PASS" starttime="20230412 13:43:11.788" endtime="20230412 13:43:11.789"/>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<arg>forecast_weather</arg>
<arg>${baseURL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230412 13:43:11.789" level="INFO">Creating Session using : alias=forecast_weather, url=https://weatherapi-com.p.rapidapi.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230412 13:43:11.789" endtime="20230412 13:43:11.789"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${forecast_weather_request}</var>
<arg>forecast_weather</arg>
<arg>/forecast.json</arg>
<arg>params=${params}</arg>
<arg>headers=${header}</arg>
<arg>expected_status=Anything</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230412 13:43:12.306" level="INFO">GET Request : url=https://weatherapi-com.p.rapidapi.com/forecast.json?q=Jakarta&amp;days=2 
 path_url=/forecast.json?q=Jakarta&amp;days=2 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate, br', 'Accept': '*/*', 'Connection': 'keep-alive', 'X-RapidAPI-Key': '5609de86f7mshff37ac23dfeca81p1d8122jsn05613f1f337a'} 
 body=None 
 </msg>
<msg timestamp="20230412 13:43:12.306" level="INFO">GET Response : url=https://weatherapi-com.p.rapidapi.com/forecast.json?q=Jakarta&amp;days=2 
 status=200, reason=OK 
 headers={'Date': 'Wed, 12 Apr 2023 06:43:12 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Cache-Control': 'public, max-age=180', 'Content-Encoding': 'br', 'Vary': 'Accept-Encoding', 'CDN-EdgeStorageId': '869', 'CDN-ProxyVer': '1.03', 'CDN-RequestCountryCode': 'SG', 'CDN-RequestPullCode': '200', 'CDN-PullZone': '93447', 'CDN-CachedAt': '04/12/2023 06:43:12', 'CDN-Uid': '8fa3a04a-75d9-4707-8056-b7b33c8ac7fe', 'CDN-Cache': 'MISS', 'CDN-RequestPullSuccess': 'True', 'CDN-RequestId': 'd881b6f0339ce2105c9e72ed57195ad1', 'CDN-Status': '200', 'X-RateLimit-Requests-Limit': '1000000', 'X-RateLimit-Requests-Remaining': '999993', 'X-RateLimit-Requests-Reset': '2509026', 'Server': 'RapidAPI-1.2.8', 'X-RapidAPI-Version': '1.2.8', 'X-RapidAPI-Region': 'AWS - ap-southeast-1'} 
 body={"location":{"name":"Jakarta","region":"Jakarta Raya","country":"Indonesia","lat":-6.21,"lon":106.85,"tz_id":"Asia/Jakarta","localtime_epoch":1681281792,"localtime":"2023-04-12 13:43"},"current":{"last_updated_epoch":1681281000,"last_updated":"2023-04-12 13:30","temp_c":33.0,"temp_f":91.4,"is_day":1,"condition":{"text":"Partly cloudy","icon":"//cdn.weatherapi.com/weather/64x64/day/116.png","code":1003},"wind_mph":17.4,"wind_kph":28.1,"wind_degree":290,"wind_dir":"WNW","pressure_mb":1007.0,"pressure_in":29.74,"precip_mm":0.0,"precip_in":0.0,"humidity":63,"cloud":50,"feelslike_c":36.3,"feelslike_f":97.4,"vis_km":10.0,"vis_miles":6.0,"uv":8.0,"gust_mph":9.8,"gust_kph":15.8},"forecast":{"forecastday":[{"date":"2023-04-12","date_epoch":1681257600,"day":{"maxtemp_c":34.8,"maxtemp_f":94.6,"mintemp_c":26.7,"mintemp_f":80.1,"avgtemp_c":29.8,"avgtemp_f":85.6,"maxwind_mph":16.8,"maxwind_kph":27.0,"totalprecip_mm":0.4,"totalprecip_in":0.02,"totalsnow_cm":0.0,"avgvis_km":10.0,"avgvis_miles":6.0,"avghumidity":63.0,"daily_will_it_rain":1,"daily_chance_of_rain":87,"daily_will_it_snow":0,"daily_chance_of_snow":0,"condition":{"text":"Patchy rain possible","icon":"//cdn.weatherapi.com/weather/64x64/day/176.png","code":1063},"uv":6.0},"astro":{"sunrise":"05:54 AM","sunset":"05:53 PM","moonrise":"11:18 PM","moonset":"11:13 AM","moon_phase":"Waning Gibbous","moon_illumination":"65","is_moon_up":1,"is_sun_up":1},"hour":[{"time_epoch":1681232400,"time":"2023-04-12 00:00","temp_c":27.8,"temp_f":82.0,"is_day":0,"condition":{"text":"Clear","icon":"//cdn.weatherapi.com/weather/64x64/night/113.png","code":1000},"wind_mph":8.1,"wind_kph":13.0,"wind_degree":243,"wind_dir":"WSW","pressure_mb":1010.0,"pressure_in":29.83,"precip_mm":0.0,"precip_in":0.0,"humidity":70,"cloud":18,"feelslike_c":30.6,"feelslike_f":87.1,"windchill_c":27.8,"windchill_f":82.0,"heatindex_c":30.6,"heatindex_f":87.1,"dewpoint_c":21.9,"dewpoint_f":71.4,"will_it_rain":0,"chance_of_rain":0,"will_it_snow":0,"chance_of_snow":0,"vis_km":10.0,"vis_miles":6.0,"gust_mph":11.2,"gust_kph":18.0,"uv":1.0},{"time_epoch":1681236000,"time":"2023-04-12 01:00","temp_c":27.6,"temp_f":81.7,"is_day":0,"condition":{"text":"Clear","icon":"//cdn.weatherapi.com/weather/64x64/night/113.png","code":1000},"wind_mph":7.4,"wind_kph":11.9,"wind_degree":248,"wind_dir":"WSW","pressure_mb":1010.0,"pressure_in":29.81,"precip_mm":0.0,"precip_in":0.0,"humidity":70,"cloud":22,"feelslike_c":30.2,"feelslike_f":86.4,"windchill_c":27.6,"windchill_f":81.7,"heatindex_c":30.2,"heatindex_f":86.4,"dewpoint_c":21.7,"dewpoint_f":71.1,"will_it_rain":0,"chance_of_rain":0,"will_it_snow":0,"chance_of_snow":0,"vis_km":10.0,"vis_miles":6.0,"gust_mph":10.1,"gust_kph":16.2,"uv":1.0},{"time_epoch":1681239600,"time":"2023-04-12 02:00","temp_c":27.3,"temp_f":81.1,"is_day":0,"condition":{"text":"Clear","icon":"//cdn.weatherapi.com/weather/64x64/night/113.png","code":1000},"wind_mph":8.5,"wind_kph":13.7,"wind_degree":251,"wind_dir":"WSW","pressure_mb":1009.0,"pressure_in":29.79,"precip_mm":0.0,"precip_in":0.0,"humidity":72,"cloud":20,"feelslike_c":29.9,"feelslike_f":85.8,"windchill_c":27.3,"windchill_f":81.1,"heatindex_c":29.9,"heatindex_f":85.8,"dewpoint_c":21.7,"dewpoint_f":71.1,"will_it_rain":0,"chance_of_rain":0,"will_it_snow":0,"chance_of_snow":0,"vis_km":10.0,"vis_miles":6.0,"gust_mph":11.6,"gust_kph":18.7,"uv":1.0},{"time_epoch":1681243200,"time":"2023-04-12 03:00","temp_c":27.1,"temp_f":80.8,"is_day":0,"condition":{"text":"Clear","icon":"//cdn.weatherapi.com/weather/64x64/night/113.png","code":1000},"wind_mph":8.3,"wind_kph":13.3,"wind_degree":243,"wind_dir":"WSW","pressure_mb":1008.0,"pressure_in":29.77,"precip_mm":0.0,"precip_in":0.0,"humidity":73,"cloud":21,"feelslike_c":29.7,"feelslike_f":85.5,"windchill_c":27.1,"windchill_f":80.8,"heatindex_c":29.7,"heatindex_f":85.5,"dewpoint_c":21.8,"dewpoint_f":71.2,"will_it_rain":0,"chance_of_rain":0,"will_it_snow":0,"chance_of_snow":0,"vis_km":10.0,"vis_miles":6.0,"gust_mph":11.2,"gust_kph":18.0,"uv":1.0},{"time_epoch":1681246800,"time":"2023-04-12 04:00","temp_c":26.9,"temp_f":80.4,"is_day":0,"condition":{"text":"Clear","icon":"//cdn.weatherapi.com/weather/64x64/night/113.png","code":1000},"wind_mph":7.4,"wind_kph":11.9,"wind_degree":241,"wind_dir":"WSW","pressure_mb":1008.0,"pressure_in":29.77,"precip_mm":0.0,"precip_in":0.0,"humidity":73,"cloud":21,"feelslike_c":29.4,"feelslike_f":84.9,"windchill_c":26.9,"windchill_f":80.4,"heatindex_c":29.4,"heatindex_f":84.9,"dewpoint_c":21.8,"dewpoint_f":71.2,"will_it_rain":0,"chance_of_rain":0,"will_it_snow":0,"chance_of_snow":0,"vis_km":10.0,"vis_miles":6.0,"gust_mph":10.1,"gust_kph":16.2,"uv":1.0},{"time_epoch":1681250400,"time":"2023-04-12 05:00","temp_c":26.8,"temp_f":80.2,"is_day":0,"condition":{"text":"Clear","icon":"//cdn.weatherapi.com/weather/64x64/night/113.png","code":1000},"wind_mph":7.2,"wind_kph":11.5,"wind_degree":241,"wind_dir":"WSW","pressure_mb":1008.0,"pressure_in":29.77,"precip_mm":0.0,"precip_in":0.0,"humidity":74,"cloud":16,"feelslike_c":29.3,"feelslike_f":84.7,"windchill_c":26.8,"windchill_f":80.2,"heatindex_c":29.3,"heatindex_f":84.7,"dewpoint_c":21.7,"dewpoint_f":71.1,"will_it_rain":0,"chance_of_rain":0,"will_it_snow":0,"chance_of_snow":0,"vis_km":10.0,"vis_miles":6.0,"gust_mph":9.8,"gust_kph":15.8,"uv":1.0},{"time_epoch":1681254000,"time":"2023-04-12 06:00","temp_c":26.8,"temp_f":80.2,"is_day":1,"condition":{"text":"Sunny","icon":"//cdn.weatherapi.com/weather/64x64/day/113.png","code":1000},"wind_mph":5.6,"wind_kph":9.0,"wind_degree":238,"wind_dir":"WSW","pressure_mb":1009.0,"pressure_in":29.79,"precip_mm":0.0,"precip_in":0.0,"humidity":74,"cloud":19,"feelslike_c":29.3,"feelslike_f":84.7,"windchill_c":26.8,"windchill_f":80.2,"heatindex_c":29.3,"heatindex_f":84.7,"dewpoint_c":21.7,"dewpoint_f":71.1,"will_it_rain":0,"chance_of_rain":0,"will_it_snow":0,"chance_of_snow":0,"vis_km":10.0,"vis_miles":6.0,"gust_mph":7.6,"gust_kph":12.2,"uv":7.0},{"time_epoch":1681257600,"time":"2023-04-12 07:00","temp_c":26.7,"temp_f":80.1,"is_day":1,"condition":{"text":"Sunny","icon":"//cdn.weatherapi.com/weather/64x64/day/113.png","code":1000},"wind_mph":4.9,"wind_kph":7.9,"wind_degree":231,"wind_dir":"SW","pressure_mb":1010.0,"pressure_in":29.82,"precip_mm":0.0,"precip_in":0.0,"humidity":74,"cloud":24,"feelslike_c":29.1,"feelslike_f":84.4,"windchill_c":26.7,"windchill_f":80.1,"heatindex_c":29.1,"heatindex_f":84.4,"dewpoint_c":21.7,"dewpoint_f":71.1,"will_it_rain":0,"chance_of_rain":0,"will_it_snow":0,"chance_of_snow":0,"vis_km":10.0,"vis_miles":6.0,"gust_mph":6.9,"gust_kph":11.2,"uv":7.0},{"time_epoch":1681261200,"time":"2023-04-12 08:00","temp_c":27.2,"temp_f":81.0,"is_day":1,"condition":{"text":"Patchy rain possible","icon":"//cdn.weatherapi.com/weather/64x64/day/176.png","code":1063},"wind_mph":4.9,"wind_kph":7.9,"wind_degree":231,"wind_dir":"SW","pressure_mb":1011.0,"pressure_in":29.84,"precip_mm":0.2,"precip_in":0.01,"humidity":72,"cloud":79,"feelslike_c":29.8,"feelslike_f":85.6,"windchill_c":27.2,"windchill_f":81.0,"heatindex_c":29.8,"heatindex_f":85.6,"dewpoint_c":21.8,"dewpoint_f":71.2,"will_it_rain":0,"chance_of_rain":66,"will_it_snow":0,"chance_of_snow":0,"vis_km":9.0,"vis_miles":5.0,"gust_mph":6.3,"gust_kph":10.1,"uv":6.0},{"time_epoch":1681264800,"time":"2023-04-12 09:00","temp_c":28.2,"temp_f":82.8,"is_day":1,"condition":{"text":"Patchy rain possible","icon":"//cdn.weatherapi.com/weather/64x64/day/176.png","code":1063},"wind_mph":5.6,"wind_kph":9.0,"wind_degree":227,"wind_dir":"SW","pressure_mb":1011.0,"pressure_in":29.86,"precip_mm":0.1,"precip_in":0.0,"humidity":68,"cloud":89,"feelslike_c":30.9,"feelslike_f":87.6,"windchill_c":28.2,"windchill_f":82.8,"heatindex_c":30.9,"heatindex_f":87.6,"dewpoint_c":21.6,"dewpoint_f":70.9,"will_it_rain":0,"chance_of_rain":61,"will_it_snow":0,"chance_of_snow":0,"vis_km":10.0,"vis_miles":6.0,"gust_mph":6.7,"gust_kph":10.8,"uv":6.0},{"time_epoch":1681268400,"time":"2023-04-12 10:00","temp_c":29.8,"temp_f":85.6,"is_day":1,"condition":{"text":"Sunny","icon":"//cdn.weatherapi.com/weather/64x64/day/113.png","code":1000},"wind_mph":5.8,"wind_kph":9.4,"wind_degree":233,"wind_dir":"SW","pressure_mb":1011.0,"pressure_in":29.86,"precip_mm":0.0,"precip_in":0.0,"humidity":61,"cloud":22,"feelslike_c":32.9,"feelslike_f":91.2,"windchill_c":29.8,"windchill_f":85.6,"heatindex_c":32.9,"heatindex_f":91.2,"dewpoint_c":21.5,"dewpoint_f":70.7,"will_it_rain":0,"chance_of_rain":0,"will_it_snow":0,"chance_of_snow":0,"vis_km":10.0,"vis_miles":6.0,"gust_mph":6.7,"gust_kph":10.8,"uv":7.0},{"time_epoch":1681272000,"time":"2023-04-12 11:00","temp_c":33.3,"temp_f":91.9,"is_day":1,"condition":{"text":"Patchy rain possible","icon":"//cdn.weatherapi.com/weather/64x64/day/176.png","code":1063},"wind_mph":6.5,"wind_kph":10.4,"wind_degree":244,"wind_dir":"WSW","pressure_mb":1011.0,"pressure_in":29.84,"precip_mm":0.1,"precip_in":0.0,"humidity":55,"cloud":81,"feelslike_c":38.8,"feelslike_f":101.8,"windchill_c":33.3,"windchill_f":91.9,"heatindex_c":38.8,"heatindex_f":101.8,"dewpoint_c":23.0,"dewpoint_f":73.4,"will_it_rain":1,"chance_of_rain":87,"will_it_snow":0,"chance_of_snow":0,"vis_km":10.0,"vis_miles":6.0,"gust_mph":7.4,"gust_kph":11.9,"uv":7.0},{"time_epoch":1681275600,"time":"2023-04-12 12:00","temp_c":34.0,"temp_f":93.2,"is_day":1,"condition":{"text":"Partly cloudy","icon":"//cdn.weatherapi.com/weather/64x64/day/116.png","code":1003},"wind_mph":7.4,"wind_kph":11.9,"wind_degree":261,"wind_dir":"W","pressure_mb":1010.0,"pressure_in":29.81,"precip_mm":0.0,"precip_in":0.0,"humidity":51,"cloud":47,"feelslike_c":39.1,"feelslike_f":102.4,"windchill_c":34.0,"windchill_f":93.2,"heatindex_c":39.1,"heatindex_f":102.4,"dewpoint_c":22.3,"dewpoint_f":72.1,"will_it_rain":0,"chance_of_rain":0,"will_it_snow":0,"chance_of_snow":0,"vis_km":10.0,"vis_miles":6.0,"gust_mph":8.5,"gust_kph":13.7,"uv":8.0},{"time_epoch":1681279200,"time":"2023-04-12 13:00","temp_c":34.8,"temp_f":94.6,"is_day":1,"condition":{"text":"Partly cloudy","icon":"//cdn.w... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20230412 13:43:12.306" level="INFO">/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/urllib3/connectionpool.py:1043: InsecureRequestWarning: Unverified HTTPS request is being made to host 'weatherapi-com.p.rapidapi.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20230412 13:43:12.307" level="INFO">${forecast_weather_request} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230412 13:43:11.789" endtime="20230412 13:43:12.307"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${forecast_weather_respond}</var>
<arg>${forecast_weather_request.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230412 13:43:12.310" level="INFO">${forecast_weather_respond} = {'location': {'name': 'Jakarta', 'region': 'Jakarta Raya', 'country': 'Indonesia', 'lat': -6.21, 'lon': 106.85, 'tz_id': 'Asia/Jakarta', 'localtime_epoch': 1681281792, 'localtime': '2023-04-12 13:43'}...</msg>
<status status="PASS" starttime="20230412 13:43:12.307" endtime="20230412 13:43:12.310"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${forecast_weather_request_status_code}</var>
<arg>${forecast_weather_request.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230412 13:43:12.311" level="INFO">${forecast_weather_request_status_code} = 200</msg>
<status status="PASS" starttime="20230412 13:43:12.310" endtime="20230412 13:43:12.311"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${forecast_weather_respond}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230412 13:43:12.313" level="INFO">${forecast_weather_respond} = {'location': {'name': 'Jakarta', 'region': 'Jakarta Raya', 'country': 'Indonesia', 'lat': -6.21, 'lon': 106.85, 'tz_id': 'Asia/Jakarta', 'localtime_epoch': 1681281792, 'localtime': '2023-04-12 13:43'}...</msg>
<status status="PASS" starttime="20230412 13:43:12.311" endtime="20230412 13:43:12.313"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${forecast_weather_request_status_code}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230412 13:43:12.314" level="INFO">${forecast_weather_request_status_code} = 200</msg>
<status status="PASS" starttime="20230412 13:43:12.313" endtime="20230412 13:43:12.314"/>
</kw>
<status status="PASS" starttime="20230412 13:43:11.788" endtime="20230412 13:43:12.314"/>
</kw>
<kw name="User Validate Status Code" library="ForecastWeather">
<arg>200</arg>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${forecast_weather_request_status_code}</arg>
<arg>${expectedCodeStatus}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230412 13:43:12.315" endtime="20230412 13:43:12.315"/>
</kw>
<status status="PASS" starttime="20230412 13:43:12.314" endtime="20230412 13:43:12.315"/>
</kw>
<kw name="User Validate the Respond Body" library="ForecastWeather">
<if>
<branch type="IF" condition="${forecast_weather_request_status_code} == 200">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${location_name}</var>
<arg>${forecast_weather_respond}</arg>
<arg>$.location.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20230412 13:43:12.338" level="INFO">${location_name} = ['Jakarta']</msg>
<status status="PASS" starttime="20230412 13:43:12.316" endtime="20230412 13:43:12.338"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${location_name}</var>
<arg>${location_name}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230412 13:43:12.339" level="INFO">${location_name} = Jakarta</msg>
<status status="PASS" starttime="20230412 13:43:12.338" endtime="20230412 13:43:12.339"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${location_name}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230412 13:43:12.339" level="INFO">Length is 7</msg>
<status status="PASS" starttime="20230412 13:43:12.339" endtime="20230412 13:43:12.339"/>
</kw>
<status status="PASS" starttime="20230412 13:43:12.316" endtime="20230412 13:43:12.339"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Error Message is appear on the respond body</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230412 13:43:12.339" endtime="20230412 13:43:12.339"/>
</kw>
<status status="NOT RUN" starttime="20230412 13:43:12.339" endtime="20230412 13:43:12.339"/>
</branch>
<status status="PASS" starttime="20230412 13:43:12.316" endtime="20230412 13:43:12.339"/>
</if>
<status status="PASS" starttime="20230412 13:43:12.315" endtime="20230412 13:43:12.339"/>
</kw>
<status status="PASS" starttime="20230412 13:43:11.787" endtime="20230412 13:43:12.339"/>
</test>
<status status="PASS" starttime="20230412 13:43:11.782" endtime="20230412 13:43:12.340"/>
</suite>
<status status="PASS" starttime="20230412 13:43:11.436" endtime="20230412 13:43:12.341"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="TC01-GET-RealTimeWeather">Tests.TC01-GET-RealTimeWeather</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="TC02-GET-ForecastWeather">Tests.TC02-GET-ForecastWeather</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
